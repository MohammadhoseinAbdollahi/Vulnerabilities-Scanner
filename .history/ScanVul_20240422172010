from vulners import Vulners
import json
import requests

def search_vulnerabilities(service_name, service_version,api_key):
    vulners_api = Vulners(api_key)

    # Search for vulnerabilities related to the service name and version
    vulnerabilities = vulners_api.softwareVulnerabilities(service_name, service_version)

    return vulnerabilities

def display_vulnerabilities_MySQL_Apache(vulnerabilities):
    if vulnerabilities:
        print("Vulnerabilities found:")
        for cve_id, vulnerability_list in vulnerabilities.items():
            for vulnerability in vulnerability_list:
                print("- CVE ID:", cve_id)
                print("  Description:", vulnerability.get('description'))
                print("  CVSS Score:", vulnerability.get('cvss', {}).get('score'))
                print()  # Add a blank line for readability
    else:
        print("No vulnerabilities found.")

# Example usage
api_key = "BVM7XHOM569FOS926JD3G78BHVTSJTSM6N6EZM3AWLYW3NVH5ZIM6SYO0DX67RIL"
service_name = "MySQL"
service_version = "5.7.33"  # Example version
#vulnerabilities = search_vulnerabilities(service_name, service_version,api_key)
#display_vulnerabilities_MySQL_Apache(vulnerabilities)


import subprocess

def run_wpscan_plugins(site_url, api_token):
    try:
        command = ["wpscan", "--url", site_url, "-e", "vp", "--plugins-detection", "mixed"]
        process = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.DEVNULL)
        stdout, _ = process.communicate()

        if process.returncode != 0:
            print(f"WPScan failed with error code {process.returncode}")
        else:
            print(stdout.decode())
    except subprocess.CalledProcessError as e:
        # Handle any errors that occur during the execution of the command
        print("Error:", e)
    
def wpscan_version(site_url,wp_version):
    base_url = 'https://services.nvd.nist.gov/rest/json/cves/1.0'
    search_params = {
        'keyword': 'wordpress ' + wordpress_version,
        'startIndex': 0,
        'resultsPerPage': 10
    }

    try:
        response = requests.get(base_url, params=search_params)
        response.raise_for_status()  # Raise an exception for HTTP errors

        if response.text:
            data = response.json()
            if 'result' in data and 'CVE_Items' in data['result']:
                cve_items = data['result']['CVE_Items']
                if cve_items:
                    print("Vulnerabilities found for WordPress version", wordpress_version + ":")
                    for item in cve_items:
                        cve_id = item['cve']['CVE_data_meta']['ID']
                        description = item['cve']['description']['description_data'][0]['value']
                        print("- CVE ID:", cve_id)
                        print("  Description:", description)
                else:
                    print("No vulnerabilities found for WordPress version", wordpress_version)
            else:
                print("No vulnerability data found in the response.")
        else:
            print("Empty response received from the NVD API.")
    except requests.exceptions.RequestException as e:
        print("An error occurred while fetching vulnerability data:", e)
# Example usage
site_url = "http://localhost/sitevul/"
wp_version="6.5.2"
api_token = 'cg686feUrg6XihDs0DbVTFf3sDTGoOExgYc4sC6PD9M'
#run_wpscan_plugins(site_url,api_token)
wpscan_version(site_url,wp_version)



